service: auth-service

provider:
  name: aws
  runtime: nodejs10.x
  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: ${self:custom.tableName}
    SCHEMA_VERSION: 67

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - arn:aws:dynamodb:*:*:table/${self:custom.tableName}
        - arn:aws:dynamodb:*:*:table/${self:custom.tableName}/index/*


plugins:
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-dynamodb-local
  - serverless-pseudo-parameters
  - serverless-ignore

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  tableName: users-${self:custom.stage}

functions:
  importBackup:
    handler: src/api/users.importBackup
    events:
      - http:
          path: backup/import
          method: post
          integration: lambda
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:547936294553:userpool/us-east-1_iGdb8rWlM
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization
  exportBackup:
    handler: src/api/users.exportBackup
    events:
      - http:
          path: backup/export
          method: get
          integration: lambda
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:547936294553:userpool/us-east-1_iGdb8rWlM
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization

resources:
  # DynamoDB
  - ${file(resources/dynamo-table.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}


